name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: app/package-lock.json

      - name: Install dependencies
        run: |
          cd app
          npm ci

      - name: Run linting
        run: |
          cd app
          npm run lint

      - name: Run format check
        run: |
          cd app
          npm run format:check

      - name: Run unit tests
        run: |
          cd app
          npm run test -- --run

      - name: Run test coverage
        run: |
          cd app
          npm run test:coverage

      - name: Build application
        run: |
          cd app
          npm run build

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: app/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  e2e-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: app/package-lock.json

      - name: Install dependencies
        run: |
          cd app
          npm ci

      - name: Install Playwright browsers
        run: |
          cd app
          npx playwright install --with-deps

      - name: Build application
        run: |
          cd app
          npm run build

      - name: Run E2E tests
        run: |
          cd app
          npm run test:e2e

      - name: Upload E2E test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-report
          path: app/playwright-report/
          retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    needs: [test, e2e-test]
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: app/package-lock.json

      - name: Install dependencies
        run: |
          cd app
          npm ci

      - name: Build application
        run: |
          cd app
          npm run build

      - name: Deploy to Vercel
        uses: vercel/action@v1
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: app

  performance-audit:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Audit URLs using Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './app/lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
