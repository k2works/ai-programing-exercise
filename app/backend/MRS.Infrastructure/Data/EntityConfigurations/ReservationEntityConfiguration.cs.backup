using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using MRS.Domain.Entities;

namespace MRS.Infrastructure.Data.EntityConfigurations;

/// <summary>
/// 予約エンティティの設定
/// </summary>
public class ReservationEntityConfiguration : IEntityTypeConfiguration<Reservation>
{
    public void Configure(EntityTypeBuilder<Reservation> builder)
    {
        // テーブル名
        builder.ToTable("Reservations");

        // 主キー
        builder.HasKey(x => x.ReservationId);

        // プロパティ設定
        builder.Property(x => x.ReservationId)
            .HasConversion(
                v => v.Value,
                v => new Domain.ValueObjects.ReservationId(v))
            .HasMaxLength(50)
            .IsRequired();

        builder.Property(x => x.ReservableRoomId)
            .HasConversion(
                v => v.Value,
                v => new Domain.ValueObjects.ReservableRoomId(v))
            .HasMaxLength(50)
            .IsRequired();

        builder.Property(x => x.UserId)
            .HasConversion(
                v => v.Value,
                v => new Domain.ValueObjects.UserId(v))
            .HasMaxLength(50)
            .IsRequired();

        builder.Property(x => x.StartTime)
            .IsRequired();

        builder.Property(x => x.EndTime)
            .IsRequired();

        builder.Property(x => x.CreatedAt)
            .IsRequired();

        // 外部キー関係
        builder.HasOne<ReservableRoom>()
            .WithMany()
            .HasForeignKey(x => x.ReservableRoomId)
            .OnDelete(DeleteBehavior.Restrict);

        builder.HasOne<User>()
            .WithMany()
            .HasForeignKey(x => x.UserId)
            .OnDelete(DeleteBehavior.Restrict);

        // インデックス
        builder.HasIndex(x => x.ReservableRoomId);
        builder.HasIndex(x => x.UserId);
        builder.HasIndex(x => new { x.ReservableRoomId, x.StartTime, x.EndTime });
    }
}
